from sklearn.cluster import KMeans
kmeans = KMeans(n_clusters=2)
kmeans.fit(coled.drop('Private',axis=1))

% Evaluation

def conv(x):     % To compare with the labels we already have
    if x == 'Yes':
        return 1
    else:
        return 0
        
coled['Cluster'] = coled['Private'].apply(conv)

from sklearn.metrics import classification_report, confusion_matrix
print(classification_report(coled['Cluster'],kmeans.labels_))
print(confusion_matrix(coled['Cluster'],kmeans.labels_))
